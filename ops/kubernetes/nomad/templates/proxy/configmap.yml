{{- if .Values.nomad.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nomad.fullname" . }}-configmap-proxy
  labels:
    {{- include "nomad.labels" . | nindent 4 }}
    app.kubernetes.io/component: proxy
data:
  nginx.conf: |
    {{- if .Values.nomad.config.north.enabled }}
    # top-level http config for websocket headers
    # If Upgrade is defined, Connection = upgrade
    # If Upgrade is empty, Connection = close
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    {{- end }}
    server {
      listen        80;
      server_name   www.example.com;
      proxy_set_header Host $host;

      proxy_connect_timeout {{ .Values.nomad.proxy.connectionTimeout }};
      proxy_read_timeout {{ .Values.nomad.proxy.timeout }};
      proxy_pass_request_headers      on;
      underscores_in_headers          on;

      {{- if .Values.nomad.config.gui.gzip }}
      gzip_min_length     1000;
      gzip_buffers        4 8k;
      gzip_http_version   1.0;
      gzip_disable        "msie6";
      gzip_vary           on;
      gzip on;
      gzip_proxied any;
      gzip_types
          text/css
          text/javascript
          text/xml
          text/plain
          application/javascript
          application/x-javascript
          application/json;
      {{- end }}

      location / {
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location ~ {{ .Values.nomad.proxy.path }}\/?(gui)?$ {
        rewrite ^ {{ .Values.nomad.proxy.path }}/gui/ permanent;
      }

      location {{ .Values.nomad.proxy.path }}/gui/ {
        proxy_intercept_errors on;
        error_page 404 = @redirect_to_index;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location @redirect_to_index {
        rewrite ^ {{ .Values.nomad.proxy.path }}/gui/index.html break;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location {{ .Values.nomad.proxy.path }}/docs/ {
        proxy_intercept_errors on;
        error_page 404 = @redirect_to_index_docs;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location @redirect_to_index_docs {
        rewrite ^ {{ .Values.nomad.proxy.path }}/docs/index.html break;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location ~ \/gui\/(service-worker\.js|meta\.json)$ {
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location ~ /api/v1/uploads(/?$|.*/raw|.*/bundle?$)  {
        client_max_body_size 35g;
        proxy_request_buffering off;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location ~ /api/v1/.*/download {
        proxy_buffering off;
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      location ~ /api/v1/entries/edit {
        proxy_buffering off;
        proxy_read_timeout {{ .Values.nomad.proxy.editTimeout }};
        proxy_pass http://{{ include "nomad.fullname" . }}-app:8000;
      }

      {{- if .Values.nomad.config.north.enabled }}
      location {{ .Values.nomad.proxy.path }}/north/ {
          client_max_body_size 500m;
          proxy_pass http://{{ include "jupyterhub.fullname" . }}-proxy-public;

          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # websocket headers
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_set_header X-Scheme $scheme;

          proxy_buffering off;
      }
      {{- end }}
    }
{{- end}}